<UserControl x:Class="FitnessClub.Views.AbonnementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:convert="clr-namespace:FitnessClub.Converter"
             mc:Ignorable="d">

    <UserControl.Resources>

        <!-- used when editing a date cell -->
        <convert:DateFormattingConverter x:Key="DateFormattingConverter"/>

        <!-- Converter visibility-->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <!-- style for read-only cells -->
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}" >
            <Setter Property="Background" Value="#00ffffff" />
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <!-- DateInscription column -->
        <DataTemplate x:Key="DateInsriptionColumnTemplate">
            <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding DateInscription,Converter={StaticResource DateFormattingConverter}}"/>
        </DataTemplate>

        <!-- TypeAbonnement column -->
        <DataTemplate x:Key="TypeAbonnementColumnTemplate">
            <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding TypeAbonnement}"/>
        </DataTemplate>

        <!-- Photo column -->
        <DataTemplate x:Key="PhotoColumnTemplate">
            <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding Photo}"/>
        </DataTemplate>
        <!-- Type Paiment-->
        <DataTemplate x:Key="PaimentColumnTemplate">
            <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding TypePaiment}"/>
        </DataTemplate>

        <!-- Certificat column -->
        <DataTemplate x:Key="CertificatColumnTemplate">
            <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding Certificat}"/>
        </DataTemplate>

        <!-- Certificat column -->
        <DataTemplate x:Key="CommentaireColumnTemplate">
            <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding Commentaire}" TextWrapping="Wrap"/>
        </DataTemplate>

        <!-- FinAbonnement column -->
        <DataTemplate x:Key="FinAbonnementColumnTemplate">
            <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding FinAbonnement,Converter={StaticResource DateFormattingConverter}}"/>
        </DataTemplate>

        <!-- column header grip style -->
        <Style x:Key="ColumnGrip" TargetType="{x:Type Thumb}">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Width" Value="3" />
            <Setter Property="Opacity" Value="0.25" />
            <Setter Property="DockPanel.Dock" Value="Right" />
        </Style>

        <!-- list view details -->

        <ControlTemplate x:Key="ClubFitnessEditListViewItemTemplate" TargetType='{x:Type ListViewItem}'>
            <Grid SnapsToDevicePixels="True" Margin="0,3,0,0">
                <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5,5,5,5"/>
                <GridViewRowPresenter TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="11" Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <!-- Change IsSelected SelectedListBoxBrush to set the selection color for the items -->
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="{DynamicResource ClubFitnessEditListViewSelectedBrush}" TargetName="Border"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ClubFitnessEditListViewStyle" TargetType="ListView">
            <Setter Property="Margin" Value="0,2,0,0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Name="Border">
                            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- style applied to column headers -->
        <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{DynamicResource HeaderBorderBrush}"/>
            <Setter Property="Background" Value="{DynamicResource HeaderBackgroundBrush}"/>
            <Setter Property="BorderThickness" Value="0,1,0,1"/>
        </Style>

        <!-- style applied to column headers -->
        <Style x:Key="FirstColumnHeaderStyle" BasedOn="{StaticResource ColumnHeaderStyle}" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1,1,0,1"/>
            <Setter Property="Padding" Value="15,5,5,5"/>
            <Setter Property="CornerRadius" Value="5,0,0,5"/>
        </Style>

        <!-- style applied to column headers -->
        <Style x:Key="LastColumnHeaderStyle" BasedOn="{StaticResource ColumnHeaderStyle}" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="0,1,1,1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="CornerRadius" Value="0,5,5,0"/>
        </Style>

        <!-- header used when no sorting -->
        <Style x:Key="ClubFitnessDataGridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="GridViewColumnHeader.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border x:Name="Bd" Style="{DynamicResource ColumnHeaderStyle}">
                            <DockPanel>
                                <TextBlock Text="{TemplateBinding GridViewColumnHeader.Content}"
                  TextAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" Margin="5,0,0,0"
                  Foreground="{DynamicResource ClubFitnessDataGridHeaderFontColor}" />
                                <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource ColumnGrip}" />
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FirstColumnGridViewColumnHeader" BasedOn="{StaticResource ClubFitnessDataGridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="GridViewColumnHeader.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border x:Name="Bd" Style="{DynamicResource FirstColumnHeaderStyle}">
                            <TextBlock
                Text="{TemplateBinding GridViewColumnHeader.Content}"
                TextAlignment="Left"
                VerticalAlignment="Center"
                Foreground="{DynamicResource ClubFitnessDataGridHeaderFontColor}"
                FontWeight="Bold"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LastColumnGridViewColumnHeader" BasedOn="{StaticResource ClubFitnessDataGridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="GridViewColumnHeader.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border x:Name="Bd" Style="{DynamicResource LastColumnHeaderStyle}">
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ClubFitnessEditListViewItemStyle" TargetType="{x:Type ListViewItem}" >
            <Setter Property="Template" Value="{DynamicResource ClubFitnessEditListViewItemTemplate}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Text" Value="Selectionner une date" />
        </Style>
<!-- Animation for expanding the Add Edit section -->
        <Storyboard x:Key="AddExpandDetailsEdit">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="AbonnementAdd" Storyboard.TargetProperty="(FrameworkElement.Height)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="525"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="AbonnementAdd" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
           <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="AbonnementListView" Storyboard.TargetProperty="(FrameworkElement.Height)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="525"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InsertButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CloseInsertButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00.3000000" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <!--Animation for collapsing the Add Edit section -->
        <Storyboard x:Key="AddCollapseDetailsEdit" >
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="AbonnementAdd">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="525"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="AbonnementListView">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="525"/>
            </DoubleAnimationUsingKeyFrames>
            <!--<BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="EditButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
            </BooleanAnimationUsingKeyFrames>-->
            <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="AddButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InsertButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False" />
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <!-- Control edit memeber-->
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="AddButton">
            <BeginStoryboard Storyboard="{StaticResource AddExpandDetailsEdit}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="CloseInsertButton">
            <BeginStoryboard x:Name="CollapseDetailsEdit_BeginStoryboard" Storyboard="{StaticResource AddCollapseDetailsEdit}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <!-- ClubFitness data control -->
    <Border Margin="0,10,10,10" Style="{DynamicResource BorderStyle}" Background="{DynamicResource BackgroundBrush}">
        <DockPanel x:Name="MainPanel">
            <!-- header area -->
            <DockPanel Margin="10,0,10,0" DockPanel.Dock="Top" Height="30" x:Name="HeaderPanel">
                <TextBlock Text="Abonnements" Style="{DynamicResource HeaderStyle}" FontWeight="Bold" Margin="5,0,0,0" VerticalAlignment="Center" Foreground="{DynamicResource HeaderFontColor}"/>
            </DockPanel>
            <!-- list area -->
            <Border x:Name="AbonnementListView" DockPanel.Dock="Top" Margin="0,0,0,0" BorderThickness="0,1,0,1" CornerRadius="0,0,0,0" Padding="0,0,0,0" Height="525" Background="{x:Null}">
                <ListView x:Name="ClubFitnessEditor" Background="{x:Null}" Margin="0,5,0,0" BorderBrush="{x:Null}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ItemContainerStyle="{DynamicResource ClubFitnessEditListViewItemStyle}" ScrollViewer.CanContentScroll="True"  Style="{DynamicResource ClubFitnessEditListViewStyle}" DockPanel.Dock="Top" HorizontalAlignment="Center" ItemsSource="{Binding AbonnementProperty}" VirtualizingStackPanel.IsVirtualizing="True" SelectedItem="{Binding SelectedAbonnement}">
                    <ListView.View>
                        <GridView AllowsColumnReorder="False" >
                            <GridViewColumn Width="10" HeaderContainerStyle="{DynamicResource FirstColumnGridViewColumnHeader}"  />
                            <GridViewColumn Header="Date Inscription" Width="100" HeaderContainerStyle="{DynamicResource ClubFitnessDataGridViewColumnHeader}" CellTemplate="{StaticResource DateInsriptionColumnTemplate}" />
                            <GridViewColumn Header="Type Abonnement" Width="110"  HeaderContainerStyle="{DynamicResource ClubFitnessDataGridViewColumnHeader}" CellTemplate="{StaticResource TypeAbonnementColumnTemplate}"/>
                            <GridViewColumn Header="Photo" Width="90" HeaderContainerStyle="{DynamicResource ClubFitnessDataGridViewColumnHeader}" CellTemplate="{StaticResource PhotoColumnTemplate}" />
                            <GridViewColumn Header="Certificat" Width="90" HeaderContainerStyle="{DynamicResource ClubFitnessDataGridViewColumnHeader}" CellTemplate="{StaticResource CertificatColumnTemplate}" />
                            <GridViewColumn Header="Type Paiment" Width="100" HeaderContainerStyle="{DynamicResource ClubFitnessDataGridViewColumnHeader}" CellTemplate="{StaticResource PaimentColumnTemplate}" />                         
                            <GridViewColumn Header="Commentaire" Width="100" HeaderContainerStyle="{DynamicResource ClubFitnessDataGridViewColumnHeader}" CellTemplate="{StaticResource CommentaireColumnTemplate}"  />
                            <GridViewColumn Header="Fin Abonnement" Width="100" HeaderContainerStyle="{DynamicResource ClubFitnessDataGridViewColumnHeader}" CellTemplate="{StaticResource FinAbonnementColumnTemplate}"  />

                            <GridViewColumn Width="10" HeaderContainerStyle="{DynamicResource LastColumnGridViewColumnHeader}" />
                        </GridView>
                    </ListView.View>
                </ListView>
            </Border>

            <!-- Add Abonnement -->
            <Border x:Name="AbonnementAdd" DockPanel.Dock="Top" Style="{DynamicResource DetailsBorderStyle}" Margin="0,0,0,0" BorderThickness="0,1,0,1" CornerRadius="0,0,0,0" Padding="0,0,0,0" Height="260" Background="{DynamicResource InputBackgroundBrush}" Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}}" >

                <StackPanel HorizontalAlignment="Left" Margin="20,20">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="250"/>
                            <ColumnDefinition Width="250"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Header="Info Abonnement" Margin="10,0,0,0">
                            <StackPanel>
                                <Label Content="_Date Inscription" Foreground="{DynamicResource InputFontColor}" Margin="5,0,0,0" Width="220"/>
                                <DatePicker x:Name="DateDebAbon" Margin="5,0,0,0" Width="220" SelectedDate="{Binding Path=Abonnement.DateInscription}"/>
                                    
                                <Label Content="_Type Abonnement" Foreground="{DynamicResource InputFontColor}" Margin="5,0,0,0" Width="220"/>
                                <ComboBox x:Name="DateTypeAbon" Margin="5,0,0,0" Width="220" Text="{Binding Path=Abonnement.TypeAbonnement}" LostFocus="ComboBox_LostFocus">
                                    <ComboBoxItem Content="1 Mois"/>
                                    <ComboBoxItem Content="3 Mois"/>
                                    <ComboBoxItem Content="6 Mois"/>
                                    <ComboBoxItem Content="12 Mois"/>
                                </ComboBox>
                                <Label Content="_Fin Abonnement"  Foreground="{DynamicResource InputFontColor}" Width="220"/>
                                <DatePicker x:Name="DateFinAbon" Margin="5,0,0,0" Width="220" SelectedDate="{Binding Path=Abonnement.FinAbonnement}"/>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Grid.Column="1" Header="Info Divers" Margin="10,0">
                            <StackPanel>
                                <Label Content="_Certificat" Foreground="{DynamicResource InputFontColor}" Margin="5,0,0,0" Width="220"/>
                                <ComboBox Margin="5,0,0,0" Width="210" Text="{Binding Path=Abonnement.Certificat}">
                                    <ComboBoxItem Content="Oui"/>
                                    <ComboBoxItem Content="Non"/>
                                </ComboBox>
                                <Label Content="_Commantaire" Foreground="{DynamicResource InputFontColor}" Margin="5,0,0,0"/>
                                <TextBox TextWrapping="Wrap"  Width="210" Height="30" Margin="5,0,0,0" Text="{Binding Path=Abonnement.Commentaire}"/>
                                <Label Content="_Photo" Width="220" Foreground="{DynamicResource InputFontColor}" Margin="5,0,0,0"/>
                                <ComboBox Margin="5,0,0,0" Width="210" Text="{Binding Path=Abonnement.Photo}">
                                    <ComboBoxItem Content="Oui"/>
                                    <ComboBoxItem Content="Non"/>
                                </ComboBox>
                                <Label Content="_Type Paiment" Width="220" Foreground="{DynamicResource InputFontColor}" Margin="5,0,0,0"/>
                                <ComboBox Margin="5,0,0,0" Width="210" Text="{Binding Path=Abonnement.TypePaiment}">
                                    <ComboBoxItem Content="Virement"/>
                                    <ComboBoxItem Content="Espece"/>
                                    <ComboBoxItem Content="Cheque"/>
                                    <ComboBoxItem Content="Cheque Vacances"/>
                                </ComboBox>
                                
                            </StackPanel>
                        </GroupBox>
                        <Border Grid.Column="2" Margin="0,10,0,0" BorderBrush="#FF6573A0" BorderThickness="2,0,0,0" Height="180" >
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                <Button x:Name="InsertButton" Content="_Ok" Height="20"  Width="60" Margin="10,15" HorizontalAlignment="Right" Command="{Binding AddCommand}" />
                                <Button x:Name="CloseInsertButton" Content="_Fermer" Height="20"  Width="60" Margin="10,15" HorizontalAlignment="Right" />
                            </StackPanel>
                        </Border>
                    </Grid>
                </StackPanel>
            </Border>
            <!-- Button abonnement-->
            <Border x:Name="Shooter" DockPanel.Dock="Top" Style="{DynamicResource BorderStyle}" Margin="0,0,0,0" BorderThickness="0,1,0,1" CornerRadius="0,0,0,0" Padding="0,0,0,0" Height="40" Background="{x:Null}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="AddButton" Content="_Ajouter" Height="20"  Width="60" Margin="15,0,0,0" HorizontalAlignment="Right" />
                    <!--<Button x:Name="EditButton" Content="_Modifier" Height="20"  Width="60" Margin="15,0,0,0" HorizontalAlignment="Right" />-->
                    <Button x:Name="DeleteButton" Content="Supp_rrimer" FontSize="10" Margin="15,0" Width="60" Height="20" HorizontalAlignment="Right" DockPanel.Dock="Right" Style="{DynamicResource RedButtonStyle}" Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedAbonnement}"/>
                </StackPanel>
            </Border>
        </DockPanel>
    </Border>
</UserControl>
